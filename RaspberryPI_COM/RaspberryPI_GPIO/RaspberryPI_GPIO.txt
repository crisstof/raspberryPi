		*****************************************
		*   GPIO  General Purpose Input/Output	*
		*****************************************

Présentation
------------
GPIO sont des ports d'entrées-sorties très utilisés dans le monde des microcontrôleurs, 
en particulier dans le domaine de l'électronique embarquée, qui ont fait leur apparition 
au début des années 1980.
 
Fonctionnement
--------------
GPIO l'utilisation des broches 27 et 28 est interdite réservées à l'accès aux mémoires EEPROM des cartes HAT connectées
sur le reaspberry PI

Attention pour les sorties gpio. elles ne délivrent au maximum 3.3v et 16mA par broche et le courant total pour 
l'ensemble du GPIO ne peut dépasser 50mA.
Si vous voulez piloter un ventilateur 5v il faudra faire un étage de transistor ou utiliser un level shifter.


*************************************************************************************************************************
ConfigurationPI>Interfaces>Remote GPIO
avant de commencer nous devons faire quelques vérifications:
sudo apt update sudo apt upgrade
sudo apt install rpi.gpio
 
**activer une sortie en ligne de commande**
man gpio
sortie
gpio -g mode 12 out
gpio -g write 12 1
gpio -g write 12 0
entrée
gpio -g mode 12 in
gpio -g read 12  1
gpio -g read 12  0

script bash
pi@raspberrypi ~/gpio $ nano test.sh
#!/bin/bash

setup ()
{
 echo Setup
 gpio -g mode 4 in
}

waitButton ()
{
 echo -n "Waiting for button ... "
 while [ `gpio -g read 4` = 1 ]; do
   sleep 0.1
 done
 echo "Got it"
}

setup
while true; do
 waitButton
done

pi@raspberrypi ~/gpio $ chmod 755 test.sh
pi@raspberrypi ~/gpio $ ./test.sh
Setup
Waiting for button ... Got it
Waiting for button ... Got it


*************************************************************************************************************************
PYTHON:

raspberryPi: GPIO23 pin16
------------
import RPi.GPIO as GPIO
import time
pin = 16  # utilisation de la pin 16
GPIO.setmode(GPIO.BOARD)  # numérotation BOARD
GPIO.setup(pin, GPIO.OUT)  # activation de la pin 16 en sortie
try: 
    while 1:  # boucle sans fin
        GPIO.output(pin, 1)  # allumer la led
        time.sleep(1)  # temporisation en seconde
        GPIO.output(pin, 0)  # eteindre la led
        time.sleep(1)  # temporisation en seconde
 
except:
    GPIO.cleanup()  # extinction de la led à l'arrêt du programme



liens:
-----
http://emery.claude.free.fr/raspberry-led-blink.html

***********************************************************************************************************
Avec bouton
import RPi.GPIO as GPIO  
import time     
         
LED = 12
BUTTON = 19

GPIO.setwarnings(False) 
GPIO.setmode(GPIO.BOARD) #12
GPIO.setup(LED,GPIO.OUT)  
GPIO.setup(BUTTON,GPIO.IN) 

mode_auto = 0
last_button_statement = 0

try:
    while True:     

        if GPIO.input(BUTTON) == 1 and last_button_statement != 1:
            if mode_auto == 1:
                mode_auto = 0
                print("Led eteinte")
                print("Appuyer sur le bouton pour relancer")
            else:
                mode_auto = 1
                print("Led clignote")
                print("Appuyer sur le bouton pour stopper")
            last_button_statement = 1
        elif GPIO.input(BUTTON) == 0 :
            last_button_statement = 0

        if mode_auto == 1 :
            GPIO.output(LED,1)   
            time.sleep(1)               
            GPIO.output(LED,0)    
            time.sleep(1)      
         
except KeyboardInterrupt:
        GPIO.output(LED, 0)      
        GPIO.cleanup()                  
        print("\nEnd of program\n")

